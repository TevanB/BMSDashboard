{"remainingRequest":"/Users/tevb/Documents/BMS/BMSDashboard/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tevb/Documents/BMS/BMSDashboard/resources/js/components/ChatMessages.vue?vue&type=style&index=0&module=true&lang=css&","dependencies":[{"path":"/Users/tevb/Documents/BMS/BMSDashboard/resources/js/components/ChatMessages.vue","mtime":1613347835579},{"path":"/Users/tevb/Documents/BMS/BMSDashboard/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tevb/Documents/BMS/BMSDashboard/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tevb/Documents/BMS/BMSDashboard/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tevb/Documents/BMS/BMSDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tevb/Documents/BMS/BMSDashboard/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNoYXQgewogIGxpc3Qtc3R5bGU6IG5vbmU7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDA7Cn0KCi5jaGF0IGxpIHsKICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIHBhZGRpbmctYm90dG9tOiA1cHg7CiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZCAjQjNBOUE5Owp9CgouY2hhdCBsaSAuY2hhdC1ib2R5IHAgewogIG1hcmdpbjogMDsKICBjb2xvcjogIzc3Nzc3NzsKfQoKLnBhbmVsLWJvZHkgewogIG92ZXJmbG93LXk6IHNjcm9sbDsKICBoZWlnaHQ6IDM1MHB4Owp9Cgo6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHsKICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMCA2cHggcmdiYSgwLDAsMCwwLjMpOwogIGJhY2tncm91bmQtY29sb3I6ICNGNUY1RjU7Cn0KCjo6LXdlYmtpdC1zY3JvbGxiYXIgewogIHdpZHRoOiAxMnB4OwogIGJhY2tncm91bmQtY29sb3I6ICNGNUY1RjU7Cn0KCjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIgewogIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAwIDZweCByZ2JhKDAsMCwwLC4zKTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1Owp9Cg=="},{"version":3,"sources":["ChatMessages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ChatMessages.vue","sourceRoot":"components","sourcesContent":["<template>\n    <ul class=\"chat\">\n        <li class=\"left clearfix\" v-for=\"message in trimOrderMessages(messages)\" :key=\"message.id\" >\n            <div class=\"chat-body clearfix\">\n                <div class=\"header\">\n                    <strong class=\"primary-font\">\n                        {{ message.user_name }}\n                    </strong>| {{  message.created_at | messageDate}}\n\n                </div>\n                <p>\n                    {{ message.message }}\n                </p>\n            </div>\n        </li>\n    </ul>\n</template>\n\n<script>\n  export default {\n    props: ['messages', 'order_id'],\n    data(){\n      return{\n        sender:{},\n        users:[],\n      }\n    },\n    watch:{\n      messages: function(){\n        this.$emit('messagesent');\n\n      }\n    },\n    created(){\n\n    },\n\n    mounted(){\n\n\n      //this.scrollToEnd();\n    },\n    methods:{\n      fetchMessages() {\n          axios.get('/messages').then(response => {\n              this.messages = response.data;\n          });\n      },\n      scrollToEnd() {\n        var container = this.$el.querySelector(\"#scroller\");\n        //console.log(container);\n        //container.scrollTop = container.scrollHeight;\n      },\n\n      getUsername(message){\n\n\n        //used model relationship to get username\n\n        if(Number.isInteger(message.id)){\n          axios.get('https://bms-backend-setup-payou-rs8qky.herokuapp.com/messages/'+message.id, message).then((data)=>{\n            //console.log(data.data.name);\n            this.sender = data.data.name;\n\n          })\n        }\n        return this.sender;\n      },\n\n      trimOrderMessages(messageArr){\n        //console.log(this.order_id.order_id);\n        let tempArr = [];\n        for(let i =0; i<messageArr.length; i++){\n          if(messageArr[i].order_id == this.order_id.order_id){\n            tempArr.push(messageArr[i]);\n          }\n        }\n\n        return tempArr;\n      }\n    }\n  };\n</script>\n<style module>\n  .chat {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  .chat li {\n    margin-bottom: 10px;\n    padding-bottom: 5px;\n    border-bottom: 1px dotted #B3A9A9;\n  }\n\n  .chat li .chat-body p {\n    margin: 0;\n    color: #777777;\n  }\n\n  .panel-body {\n    overflow-y: scroll;\n    height: 350px;\n  }\n\n  ::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n    background-color: #F5F5F5;\n  }\n\n  ::-webkit-scrollbar {\n    width: 12px;\n    background-color: #F5F5F5;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\n    background-color: #555;\n  }\n</style>\n"]}]}