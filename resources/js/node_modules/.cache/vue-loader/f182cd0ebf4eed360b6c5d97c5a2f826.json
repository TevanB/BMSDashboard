{"remainingRequest":"/Users/tevb/Documents/BMS/BMSDashboard/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tevb/Documents/BMS/BMSDashboard/resources/js/components/OrderPage.vue?vue&type=template&id=0cad287a&","dependencies":[{"path":"/Users/tevb/Documents/BMS/BMSDashboard/resources/js/components/OrderPage.vue","mtime":1613347835579},{"path":"/Users/tevb/Documents/BMS/BMSDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tevb/Documents/BMS/BMSDashboard/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tevb/Documents/BMS/BMSDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tevb/Documents/BMS/BMSDashboard/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}